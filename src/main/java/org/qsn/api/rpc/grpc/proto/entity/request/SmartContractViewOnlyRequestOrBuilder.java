// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: qsn/entity/request/SmartContractRequests.proto

package org.qsn.api.rpc.grpc.proto.entity.request;

public interface SmartContractViewOnlyRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:org.qsn.protobuf.SmartContractViewOnlyRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.org.qsn.protobuf.BaseRequest baseRequest = 1;</code>
   * @return Whether the baseRequest field is set.
   */
  boolean hasBaseRequest();
  /**
   * <code>.org.qsn.protobuf.BaseRequest baseRequest = 1;</code>
   * @return The baseRequest.
   */
  org.qsn.api.rpc.grpc.proto.entity.common.BaseRequest getBaseRequest();
  /**
   * <code>.org.qsn.protobuf.BaseRequest baseRequest = 1;</code>
   */
  org.qsn.api.rpc.grpc.proto.entity.common.BaseRequestOrBuilder getBaseRequestOrBuilder();

  /**
   * <code>string contractName = 2;</code>
   * @return The contractName.
   */
  java.lang.String getContractName();
  /**
   * <code>string contractName = 2;</code>
   * @return The bytes for contractName.
   */
  com.google.protobuf.ByteString
      getContractNameBytes();

  /**
   * <code>string contractAction = 3;</code>
   * @return The contractAction.
   */
  java.lang.String getContractAction();
  /**
   * <code>string contractAction = 3;</code>
   * @return The bytes for contractAction.
   */
  com.google.protobuf.ByteString
      getContractActionBytes();

  /**
   * <code>repeated bytes contractArguments = 4;</code>
   * @return A list containing the contractArguments.
   */
  java.util.List<com.google.protobuf.ByteString> getContractArgumentsList();
  /**
   * <code>repeated bytes contractArguments = 4;</code>
   * @return The count of contractArguments.
   */
  int getContractArgumentsCount();
  /**
   * <code>repeated bytes contractArguments = 4;</code>
   * @param index The index of the element to return.
   * @return The contractArguments at the given index.
   */
  com.google.protobuf.ByteString getContractArguments(int index);
}
